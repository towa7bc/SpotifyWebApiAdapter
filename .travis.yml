language: cpp

install:
  - if [ "${TRAVIS_OS_NAME}" = "osx" -a "${CXX}" = "clang++" ]; then export MKSPEC=macx-clang; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" -a "${CXX}" = "g++" ]; then export MKSPEC=macx-g++; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" -a "${CXX}" = "g++" ]; then export MKSPEC=linux-g++; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" -a "${CXX}" = "clang++" ]; then export MKSPEC=linux-clang; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo apt -y update -qq && sudo apt -y install qt5-default; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew update; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew install qt5; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then export PATH=$(brew --prefix)/opt/qt5/bin:$PATH; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then pip install --user conan cmake; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then pip3 install --user conan cmake; fi

jobs:
  include:
    - os: osx
      compiler: clang
      osx_image: xcode11.3
      env:
        - PATH="${HOME}/Library/Python/3.7/bin:${PATH}"
        - MATRIX_EVAL=""

    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - GCC_VER="9"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-9
            - g++-9
            - doxygen
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}

    - os: linux
      dist: bionic
      compiler: clang
      addons:
        apt:
          packages:
            - clang-9
            - doxygen
      env:
        - MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"

before_script:
  - eval "${MATRIX_EVAL}"

script:
  - cmake -D ENABLE_COVERAGE:BOOL=TRUE . > log1.txt
  - cmake --build . -- -j2
  - ctest -j2

before_deploy:
  - export FILE_TO_UPLOAD=$(ls _builds/*/Foo-*.tar.gz)

deploy:
  provider: releases
  api_key:
    secure: "2TTlw8QC2TDLfAeyAX2Umd4W7cOGte/5bXt2Ek+FNqxGQVY2G0sClGf5B8XeMpYW2S8DhAfpYAQ9S3qG4ekI6gvjUXT3hR1YXOCb8pP8pV6AdlbVJ5gKxCVmYyRZXym0zyvunKQz0Qo0Ddtfp++YXKOzNKq72CZBx+ZuQktk/YRjgAug+P22hgdUhT7QwjWS89KaWrEkVYCCHHDpk5vJeRKjYiqaI8LCBcpLiOOmyh2xQ2jRHqzE59h6GbkuMg4ezT3CSqB0If7rbGWrmhsNk16KI7jDhvvGB7DrP7ijmCSJzButhaOSv49DM9griERNNOXSyxdvuYj/GGzFa+EO9M6IiJInsgv6C7cAWL6RmqznVXCIfKAsiFvV3zHN6b21gh1jVlvruB0zn7Nuwr3xHVOIJ81Z6GIiKBXLkOePOpUb2t7Qy/42fO9a4QYTdFYqPzx2H/ZvHcfonWA2dQeWqJ6NMUorB4Xx7gIG9DuQmxIGIvEKNbMq0FOxZWMWNGtQU1i62PVh2A+cTmBfq16TQy/hMoIo/wcnf/KgscZpnbyJf5OkvPQZ/uYLYmEHvI4IyJ30XpkVGVH5Szc1413vcQzuhxk0zwbzo/+PiGQjqgFNymrPNGwyhBoz+7CMFsDiDqm4YvCKhMNrcuIVnrDipULpxZFDCfKRW+qTp/JedwE="
  file_glob: true
  file: "${FILE_TO_UPLOAD}"
  skip_cleanup: true
  on:
    tags: true
