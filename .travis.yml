language: cpp

install:
  - if [ "${TRAVIS_OS_NAME}" = "osx" -a "${CXX}" = "clang++" ]; then export MKSPEC=macx-clang; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" -a "${CXX}" = "g++" ]; then export MKSPEC=macx-g++; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" -a "${CXX}" = "g++" ]; then export MKSPEC=linux-g++; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" -a "${CXX}" = "clang++" ]; then export MKSPEC=linux-clang; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo apt -y update -qq && sudo apt -y install qt5-default; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew update; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew install qt5; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then export PATH=$(brew --prefix)/opt/qt5/bin:$PATH; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then pip install --user conan cmake; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then pip3 install --user conan cmake; fi

jobs:
  include:
    - os: osx
      compiler: clang
      osx_image: xcode11.3
      env:
        - PATH="${HOME}/Library/Python/3.7/bin:${PATH}"
        - MATRIX_EVAL=""

    - os: osx
      compiler: gcc
      osx_image: xcode11.3    # includes gcc-9 by default
      env:
        - PATH="${HOME}/Library/Python/3.7/bin:${PATH}"
        - GCC_VER="9"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}

    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-9
            - g++-9
            - doxygen
      env:
        - GCC_VER="9"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}

    - os: linux
      dist: bionic
      compiler: clang
      addons:
        apt:
          packages:
            - doxygen
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

before_script:
  - eval "${MATRIX_EVAL}"

script:
  - cmake -D ENABLE_COVERAGE:BOOL=TRUE . > log1.txt
  - cmake --build . -- -j2
  - ctest -j2



